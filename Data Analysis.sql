
/*MOBILE MANUFACTURING DATA ANALYSIS USING SQL*/

/*SQL SKILLS: joins, date manipulation, regular expressions, aggregate functions, string manipulation*/
 
-- --------------------------------------------------------------------------------------------------------------


--Q1--BEGIN 

SELECT State 
FROM FACT_TRANSACTIONS 
INNER JOIN DIM_LOCATION ON FACT_TRANSACTIONS.IDLocation = DIM_LOCATION.IDLocation
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDModel = DIM_MODEL.IDModel
WHERE DATE BETWEEN '01-01-2015' AND GETDATE()

--Q1--END

--Q2--BEGIN

SELECT TOP 1 
STATE FROM DIM_LOCATION
INNER JOIN FACT_TRANSACTIONS ON DIM_LOCATION.IDLOCATION= FACT_TRANSACTIONS.IDLOCATION
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER= DIM_MODEL.IDMANUFACTURER
WHERE MANUFACTURER_NAME = 'Samsung'
GROUP BY STATE
ORDER BY SUM(QUANTITY) DESC

--Q2--END

--Q3--BEGIN 

SELECT MODEL_NAME, ZIPCODE, STATE, COUNT(IDCUSTOMER) AS NO_OF_TRANSACTIONS FROM DIM_LOCATION
INNER JOIN FACT_TRANSACTIONS ON DIM_LOCATION.IDLOCATION = FACT_TRANSACTIONS.IDLOCATION
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
GROUP BY MODEL_NAME, ZIPCODE, STATE

--Q3--END

--Q4--BEGIN 

SELECT TOP 1
IDMODEL, MODEL_NAME FROM DIM_MODEL
ORDER BY UNIT_PRICE

--Q4--END

--Q5--BEGIN 

SELECT MODEL_NAME, AVG(UNIT_PRICE) AS AVG_PRICE FROM DIM_MODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
WHERE MANUFACTURER_NAME IN 
(
SELECT TOP 5 MANUFACTURER_NAME FROM FACT_TRANSACTIONS
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(QUANTITY)
)
GROUP BY MODEL_NAME
ORDER BY AVG(UNIT_PRICE) DESC

--Q5--END

--Q6--BEGIN 

SELECT CUSTOMER_NAME, AVG(TOTALPRICE) AVG_SPENT
FROM DIM_CUSTOMER
INNER JOIN FACT_TRANSACTIONS ON DIM_CUSTOMER.IDCUSTOMER = FACT_TRANSACTIONS.IDCUSTOMER
WHERE YEAR(DATE) = 2009 
GROUP BY CUSTOMER_NAME
HAVING AVG(TOTALPRICE)>500

--Q6--END

--Q7--BEGIN-- 

SELECT MODEL_NAME 
FROM FACT_TRANSACTIONS
INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDMODEL= DIM_MODEL.IDMODEL
GROUP BY MODEL_NAME
HAVING 
SUM(Quantity) >= (SELECT TOP 5 SUM(Quantity) FROM FACT_TRANSACTIONS WHERE YEAR(DATE) = 2008  GROUP BY IDMODEL ORDER BY SUM(Quantity) DESC) AND 
SUM(Quantity) >= (SELECT TOP 5 SUM(Quantity) FROM FACT_TRANSACTIONS WHERE YEAR(DATE) = 2009  GROUP BY IDMODEL ORDER BY SUM(Quantity) DESC) AND 
SUM(Quantity) >= (SELECT TOP 5 SUM(Quantity) FROM FACT_TRANSACTIONS WHERE YEAR(DATE) = 2010  GROUP BY IDMODEL ORDER BY SUM(Quantity) DESC)

--Q7--END

--Q8--BEGIN 

SELECT TOP 1 MANUFACTURER_NAME 
FROM DIM_MANUFACTURER 
INNER JOIN DIM_MODEL ON DIM_MANUFACTURER.IDMANUFACTURER= DIM_MODEL .IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS ON DIM_MODEL.IDMODEL= FACT_TRANSACTIONS.IDMODEL
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(TOTALPRICE) DESC

--Q8--END

--Q9--BEGIN 

SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER
INNER JOIN DIM_MODEL ON DIM_MANUFACTURER.IDMANUFACTURER= DIM_MODEL.IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS ON DIM_MODEL.IDMODEL= FACT_TRANSACTIONS.IDMODEL
WHERE YEAR(DATE) = 2010 
EXCEPT 
SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER 
INNER JOIN DIM_MODEL ON DIM_MANUFACTURER.IDMANUFACTURER= DIM_MODEL.IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS ON DIM_MODEL.IDMODEL= FACT_TRANSACTIONS.IDMODEL
WHERE YEAR(DATE) = 2009

--Q9--END

--Q10--BEGIN 

SELECT TOP 100 CUSTOMER_NAME, 
AVG(CASE WHEN YEAR(DATE) = 2005 THEN TOTALPRICE END) AS AVERAGE_PRICE_2005,
AVG(CASE WHEN YEAR(DATE) = 2005 THEN QUANTITY END) AS AVERAGE_QTY_2005,
AVG(CASE WHEN YEAR(DATE) = 2018 THEN TOTALPRICE END) AS AVERAGE_PRICE_2018,
AVG(CASE WHEN YEAR(DATE) = 2018 THEN QUANTITY END) AS AVERAGE_QTY_2018
FROM DIM_CUSTOMER
INNER JOIN FACT_TRANSACTIONS ON FACT_TRANSACTIONS.IDCUSTOMER= DIM_CUSTOMER.IDCUSTOMER
GROUP BY CUSTOMER_NAME

--Q10--END